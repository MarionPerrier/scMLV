/**
 * Minified by jsDelivr using Terser v3.14.1.
 * Original file: /npm/js-combinatorics@1.4.5/combinatorics.js
 *
 * Do NOT use SRI with dynamically generated files! More information: https://www.jsdelivr.com/using-sri-with-dynamic-files
 */
export const version="1.4.5";const _BI="function"==typeof BigInt?BigInt:Number,_crop=t=>t<=Number.MAX_SAFE_INTEGER?Number(t):_BI(t);export function permutation(t,e){if(t<0)throw new RangeError("negative n is not acceptable");if(e<0)throw new RangeError("negative k is not acceptable");if(0==e)return 1;if(t<e)return 0;[t,e]=[_BI(t),_BI(e)];let r=_BI(1);for(;e--;)r*=t--;return _crop(r)}export function combination(t,e){if(0==e)return 1;if(t==e)return 1;if(t<e)return 0;const r=permutation,n=_BI(r(t,e))/_BI(r(e,e));return _crop(n)}export function factorial(t){return permutation(t,t)}export function factoradic(t,e=0){if(t<0)return;let[r,n]=[_BI(t),_BI(1)];if(e)n=_BI(factorial(e));else{for(e=1;n<r;n*=_BI(++e));r<n&&(n/=_BI(e--))}let s=[0];for(;e;n/=_BI(e--))s[e]=Math.floor(Number(r/n)),r%=n;return s}export function combinadic(t,e){const r=combination(t,e);return n=>{if(n<0||r<=n)return;let s=[],[i,o]=[t,e],h=_BI(r)-_BI(1)-_BI(n);for(let r=0;r<e;r++){for(i--;h<combination(i,o);)i--;s.push(t-1-i),h-=_BI(combination(i,o)),o--}return s}}const _crypto="undefined"!=typeof crypto?crypto:{},_randomBytes="function"==typeof _crypto.randomBytes?t=>Uint8Array.from(_crypto.randomBytes(t)):"function"==typeof _crypto.getRandomValues?t=>_crypto.getRandomValues(new Uint8Array(t)):t=>Uint8Array.from(Array(t),()=>256*Math.random());export function randomInteger(t=0,e=Math.pow(2,53)){let r=t.constructor;if(0===arguments.length)return Math.floor(Math.random()*r(e));if(1==arguments.length&&([t,e]=[r(0),t]),"number"==typeof t)return[t,e]=[Math.ceil(Number(t)),Math.ceil(Number(e))],Math.floor(Math.random()*(e-t))+t;const n=r(e)-r(t),s=n.toString(16).length,i=_randomBytes(s).reduce((t,e)=>(t<<r(8))+r(e),r(0));return(r(i)*n>>r(8*s))+r(t)}class _CBase{static of(...t){return new(Function.prototype.bind.apply(this,[null].concat(t)))}static from(t){return new(Function.prototype.bind.apply(this,[null].concat(t)))}[Symbol.iterator](){return function*(t,e){for(let r=0;r<e;r++)yield t.nth(r)}(this,this.length)}toArray(){return[...this]}get isBig(){return Number.MAX_SAFE_INTEGER<this.length}get isSafe(){return"undefined"!=typeof BigInt||!this.isBig}_check(t){if(t<0){if(this.length<-t)return;return _crop(_BI(this.length)+_BI(t))}if(!(this.length<=t))return t}nth(t){return[]}sample(){return this.nth(randomInteger(this.length))}samples(){return function*(t){for(;;)yield t.sample()}(this)}}export class Permutation extends _CBase{constructor(t,e=0){super(),this.seed=[...t],this.size=0<e?e:this.seed.length,this.length=permutation(this.seed.length,this.size),Object.freeze(this)}nth(t){if(void 0===(t=this._check(t)))return;const e=this.seed.length-this.size,r=factorial(e);let n=factoradic(_BI(t)*_BI(r),this.seed.length),s=this.seed.slice(),i=[];for(let t=this.seed.length-1;e<=t;t--)i.push(s.splice(n[t],1)[0]);return i}}export class Combination extends _CBase{constructor(t,e=0){super(),this.seed=[...t],this.size=0<e?e:this.seed.length,this.size=e,this.length=combination(this.seed.length,this.size),this.comb=combinadic(this.seed.length,this.size),Object.freeze(this)}bitwiseIterator(){const t=this.length.constructor,[e,r,n]=[t(0),t(1),t(2)],s=t=>{const e=t&-t,r=e+t;return r+((r^t)/e>>n)};let i=(r<<t(this.size))-r;return function*(t,n){for(let h=0;h<n;h++,i=s(i)){var o=[];for(let n=i,s=0;e<n;n>>=r,s++)n&r&&o.push(t.seed[s]);yield o}}(this,this.length)}nth(t){if(void 0!==(t=this._check(t)))return this.comb(t).reduce((t,e)=>t.concat(this.seed[e]),[])}}export class BaseN extends _CBase{constructor(t,e=1){super(),this.seed=[...t],this.size=e;let r=this.seed.length;this.base=r;let n=e<1?0:Array(e).fill(_BI(r)).reduce((t,e)=>t*e);this.length=_crop(n),Object.freeze(this)}nth(t){if(void 0===(t=this._check(t)))return;let e=_BI(t);const r=_BI(this.base);let n=[];for(let t=0;t<this.size;t++){var s=e%r;n.push(this.seed[Number(s)]),e-=s,e/=r}return n}}export class PowerSet extends _CBase{constructor(t){super(),this.seed=[...t];const e=_BI(1)<<_BI(this.seed.length);this.length=_crop(e),Object.freeze(this)}nth(t){if(void 0===(t=this._check(t)))return;let e=_BI(t),r=[];for(let t=_BI(0);e;e>>=_BI(1),t++)e&_BI(1)&&r.push(this.seed[Number(t)]);return r}}export class CartesianProduct extends _CBase{constructor(...t){super(),this.seed=t.map(t=>[...t]),this.size=this.seed.length;const e=this.seed.reduce((t,e)=>t*_BI(e.length),_BI(1));this.length=_crop(e),Object.freeze(this)}nth(t){if(void 0===(t=this._check(t)))return;let e=_BI(t),r=[];for(let t=0;t<this.size;t++){const n=this.seed[t].length,s=_BI(n),i=e%s;r.push(this.seed[t][Number(i)]),e-=i,e/=s}return r}}
//# sourceMappingURL=/sm/3b98aef13a182af8294c82276f31a55d1ab416c9b025c039dd7e292ccfd024e4.map